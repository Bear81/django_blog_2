Adding more posts
In these text-based steps, we'll explore fixtures in Django. So far, when you've needed a blog post to test your code, you've added it by hand through the admin panel. But soon, lessons like pagination will need many posts to show results. Adding them one by one would be tedious.

Enter fixtures: they help move data into databases. Think of a fixture as a file containing data tailored to your database. You can use it to save database contents or, as we'll see here, to fill a database for development. We'll work with a JSON fixture, but Django also supports XML and YAML.

To get up and running, follow the steps below.

Adding fixtures
1. Open your project in your IDE and add a directory within your blog app named fixtures.

Create a new fixtures directory within the blog app
2. Within the blog/fixtures directory, create a new file named posts.json.

Create a new posts.json file within the fixtures directory
3. Copy and paste the JSON from this source file to your posts.json file.

Add json posts to posts.json
4. Now load the data to the database table using the fixture name of posts. Django knows where to look for the file, as it is stored in the fixtures directory by default, e.g. blog/fixtures/posts.json

python3 manage.py loaddata posts
Load posts.json data to table
5. You can now add blog/fixtures/ to the .gitignore file.

Note: You can keep the directory locally, as this technique will be helpful in the future if you run into database errors.

Git ignoring the fixtures file
View data
6. Run the Django server in the workspace terminal and open the browser. Append /admin to the browser URL. Log in to the admin dashboard with the superuser credentials (if you are not already).

Log into the dashboard
7. Click on Posts and view the newly added posts.

Note: The newly added posts appear to have been created on a date before the ones you added yourself. The created_on date for the newly added posts is the date in the JSON file, not the current date. Therefore, they appear older than the posts you added from the admin panel.

Confirm the posts were added.
Review
This topic is an aside on using fixtures to add posts. The usual procedure in the lessons to add data is to use the admin panel. However, fixtures are valuable during Django project development when you require a large dataset for testing or to demonstrate the outcome of a piece of code. If you lose your database table contents due to an error, then this is a quick way to repopulate the table.

As a developer, you will find this technique helpful to populate a database with dummy data to demonstrate a working project to colleagues, clients or a prospective employer.

